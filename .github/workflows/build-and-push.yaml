name: Latest Build & Push
on:
  schedule:
    - cron: '0 0 * * *'

jobs:
  job01:
    name: Base update check
    runs-on: ubuntu-latest
    outputs:
      build_new_image_schedule: ${{ steps.base_update_check.outputs.build_image }}
      build_new_image_push: ${{ steps.git_push_check.outputs.build_image }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
      -
        name: Base image update check
        if: github.event_name == 'schedule'
        id: base_update_check
        run: |
          BASE_IMAGE_DIGEST=$(curl -s https://registry.hub.docker.com/v2/repositories/library/python/tags/slim | grep -oP '"digest":"\K[^"]+' | tail -1)
          PREVIOUS_DIGEST=$(cat Base_Digest)
          if [ "$BASE_IMAGE_DIGEST" == "$PREVIOUS_DIGEST" ]; then
            echo "Base image has not been updated. Exiting..."
            echo "build_image=false" >> $GITHUB_OUTPUT
          else
            echo "Base image has been updated. Continuing with the build..."
            echo "build_image=true" >> $GITHUB_OUTPUT
          fi
  job02:
    name: Build and publish
    needs: [job01]
    if: needs.job01.outputs.build_new_image_schedule == 'true'
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_NAMESPACE }}/ngrok-plex
          flavor: |
            latest=true
          tags: |
            type=schedule,pattern={{date 'YYYYMMDD'}}
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./
          platforms: linux/amd64, linux/arm64, linux/arm/v7, linux/386
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=registry,ref=${{ secrets.DOCKERHUB_NAMESPACE }}/ngrok-plex:buildcache.latest
          cache-to: |
            type=registry,ref=${{ secrets.DOCKERHUB_NAMESPACE }}/ngrok-plex:buildcache.latest,mode=max
            
      -
        name: Update digest to file
        run: |
          BASE_IMAGE_DIGEST=$(curl -s https://registry.hub.docker.com/v2/repositories/library/python/tags/slim | grep -oP '"digest":"\K[^"]+' | tail -1)
          echo "New Digest: $BASE_IMAGE_DIGEST"
          echo $BASE_IMAGE_DIGEST > Base_Digest
      -
        name: Push changes to repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ $(git status) == *"nothing to commit, working tree clean"* ]]; then
          exit 0
          fi
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/origamiofficial/docker-ngrok-plex.git
          git add Base_Digest
          git commit -m "Base Digest Updated"
          git push
